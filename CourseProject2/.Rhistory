install.packages("slidify")
library(ggplot2)
search()
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
search()
install.packages("devtools")
library(devtools)
find_rtools()
find_rtools()
install.packages("KernSmooth")
library(Kernsmooth)
library(KernSmooth)
swirl()
?swirl
get swirl
install swirl
install.packages("swirl")
library(swirl)
swirl()
getwd()
ls()
x <-9
ls()
list.files()
?list.files
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
x<- [1:3, 4:6]
x<- matrix(1:3, 4:6)
x<- (1:10, 2, 3)
x<- matrix(1:10, 2, 3)
x<- matrix(1:16, 4, 4)
x
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
a <- makeCacheMatrix()
a$set(matrix(1:16,4,4))
a
a$set(matrix(1:16,4,4))
cacheSolve(a)
a$set(matrix(1:4,2,2))
cacheSolve(a)
a$set(matrix(1:9,3,3))
cacheSolve(a)
a$set(matrix(1:25,5,5))
cacheSolve(a)
a$set(matrix(1:4,2,2))
cacheSolve(a)
cacheSolve(a)
a$set(matrix(1:4,2,2))
cacheSolve(a)
a$set(matrix(201:300,10,10))
cacheSolve(a)
a$set(matrix(201:250 300:251,10,10))
a$set(matrix(c(201:250 300:251),10,10))
a$set(matrix(c(201:250, 300:251),10,10))
cacheSolve(a)
a$set(matrix(c(1,1,1,1,1,2,1,2,1,1,1,0,1,4,2,3),4,4))
cacheSolve(a)
cacheSolve(a)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix()
a$set(matrix(c(1,1,1,1,1,2,1,2,1,1,1,0,1,4,2,3),4,4))
cacheSolve(a)
cacheSolve(a)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv, destfile="Q1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="Q1.csv")
read.csv("Q1.csv")
data <- read.csv("Q1.csv")
View(data)
cutData <- data[(data$ACR > 10 & data$AGS == 6),]
View(cutData)
vector <- (data$ACR > 10 & data$AGS == 6)
agricultureLogical <- (data$ACR > 10 & data$AGS == 6)
which(agricultureLogical)
agricultureLogical <- (data$ACR > 10 & data$AGS == 6)
which(agricultureLogical)
which(agricultureLogical, rm.na=TRUE)
agrigcultureLogical
agricultureLogical
agricultureLogical <- (data$ACR > 10 & data$AGS = 6)
agricultureLogical <- (data$ACR > 10 & data$AGS == 6)
agricultureLogical <- (data$ACR == 3 & data$AGS == 6)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="jeff.jpg")
read.jpeg("jeff.jpg")
readJPEG("jeff.jpg")
jeffjpg <- readJPEG("jeff.jpg")
quantile(jeffjpg)
quantile(jeffjpg, native=TRUE)
quantile(jeffjpg, native=TRUE, probs=c(0.3, 0.8))
jeffjpg <- readJPEG("jeff.jpg", native=TRUE)
jeffjpg <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="jeff.jpg")
jeffjpg <- readJPEG("jeff.jpg", native=TRUE)
quantile(jeffjpg, probs=c(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="jeff.jpg", mode= "wb")
jeffjpg <- readJPEG("jeff.jpg", native=TRUE)
quantile(jeffjpg, probs=c(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="educ.csv")
GDPdata <- read.csv("GPD.csv")
GDPdata <- read.csv("GDP.csv")
educdata <- read.csv("educ.csv")
View(educdata)
View(GDPdata)
?merge
merged <- merge(GDPdata, educdata, by.x="X.2", by.y="Short.Name")
View(merged)
sorted <- merged[order(merged$Gross.domestic.product.2012),]
View(sorted)
View(educdata)
View(GDPdata)
merged <- merge(GDPdata, educdata, by.x="X", by.y="CountryCode")
sorted <- merged[order(merged$Gross.domestic.product.2012),]
View(sorted)
View(merged)
View(sorted)
View(merged)
View(GDPdata)
GDPdata <- GDPdata[1:194,]
View(GDPdata)
GDPdata <- GDPdata[5:194,]
merged <- merge(GDPdata, educdata, by.x="X", by.y="CountryCode")
sorted <- merged[order(merged$Gross.domestic.product.2012),]
View(sorted)
sorted <- merged[order(-merged$Gross.domestic.product.2012),]
merged$Gross.domestic.product.2012 <- as.numeric(merged$Gross.domestic.product.2012)
sorted <- merged[order(-merged$Gross.domestic.product.2012, decreasing=TRUE),]
View(sorted)
View(merged)
merged <- merge(GDPdata, educdata, by.x="X", by.y="CountryCode")
View(merged)
sorted <- merged[order(-merged$Gross.domestic.product.2012, decreasing=TRUE),]
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing=TRUE),]
View(sorted)
merged$Gross.domestic.product.2012 <- as.numeric(as.character(merged$Gross.domestic.product.2012))
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing=TRUE),]
View(sorted)
View(sorted)
aggregate(Gross.domestic.product.2012~Income.Group, sorted, mean)
View(sorted)
quantile(sorted$Gross.domestic.product.2012)
xtabs(Freq ~ Income.Group + Gross.domestic.product.2012,data=DF)
xtabs(Freq ~ Income.Group + Gross.domestic.product.2012)
summary(sorted)
?cut2
install.packages("Hmisc")
library(Hmisc)
?cut2
cutData <- table(cut2(sorted, g=5))
cutData <- table(cut2(sorted$Gross.domestic.product.2012, g=5))
cutData
Supercut <- sorted[1:38,]
Supercut
sorted <- merged[order(merged$Gross.domestic.product.2012,]
sorted <- merged[order(merged$Gross.domestic.product.2012),]
Supercut <- sorted[1:38,]
View(Supercut)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="housing.csv")
data <- read.csv("housing.csv")
splitNames <- strsplit(names(data), "wgtp")
splitNames[[123]]
View(GDPdata)
View(GDPdata)
money <- GDPdata[,6]
money
money <- GDPdata[[,6]]
money <- GDPdata[,6]
money <- GDPdata(,6)
countryNames <- GDPdata[,"X"]
countryNames <- GDPdata[,"X.2"]
grep("United$",countryNames), 3
grep("United$",countryNames)
grep("^United",countryNames)
money
money <- GDPdata(,"X.3")
money <- GDPdata[],"X.3"]
money <- GDPdata[,"X.3"]
mean(money)
money
gsub(",","",money)
mean(moneY)
mean(money)
mean(as.numeric(money))
money2 <- as.numeric(money)
money2
money2 <- as.numeric(as.character(money)
)
money2
as.character(money)
money2 <- gsub(",","",money)
money3 <- as.numeric(as.character(money2))
money3
mean(money3)
View(merged)
grep("June",merged[,"Special.Notes"])
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
year2012 <- grep("2012", sampleTimes)
year2012
length(2012)
length(year2012)
year2012 <- sampleTimes[year2012]
year2012
formattedDates <- format(year2012, "%a")
formattedDates
length(grep("Mon",formattedDates))
View(GDPdata)
View(merged)
grep("^Fiscal year end: June",merged[,"Special.Notes"])
length(grep("^Fiscal year end: June",merged[,"Special.Notes"]))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
View(data)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality
)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(Wind, Ozone, data = airquality, color = . ~ Month)
qplot(Wind, Ozone, data = airquality, color = Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
setwd("~/DataScience/ExploratoryData/CourseProject2")
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
source('~/DataScience/ExploratoryData/CourseProject2/plot3.R')
